name: Run tests

on:
  push:
    paths: ['src/**']
  pull_request:
    paths: ['src/**']
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '23'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up services
        run: cd infra/docker_compose && bash restart_docker.sh && cd ../..

      - name: Verify (build+test+checkstyle)
        run: chmod +x ./mvnw && ./mvnw -q verify
        env:
          APIBASEURL: http://localhost:4111
          UIBASEURL: http://frontend:80

      - name: Run Swagger coverage
        if: always()
        run: |
          chmod +x ./.swagger-coverage-commandline/bin/swagger-coverage-commandline
          ./.swagger-coverage-commandline/bin/swagger-coverage-commandline \
            -s http://localhost:4111/v3/api-docs \
            -i target/swagger-coverage-output

      - name: Load test report history
        uses: actions/checkout@v2
        if: always()
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: target/allure-results
          allure_history: allure-history

      - name: Build Swagger coverage report
        if: always()
        run: |
          # Создаём нужные папки
          mkdir -p allure-history/${GITHUB_RUN_NUMBER}/widgets

          # Копируем HTML-отчёт
          sudo cp swagger-coverage-report.html allure-history/${GITHUB_RUN_NUMBER}/

          # Копируем JSON с результатами покрытия
          if [ -f swagger-coverage-results.json ]; then
            sudo cp swagger-coverage-results.json allure-history/${GITHUB_RUN_NUMBER}/widgets/swagger-coverage.json
          elif [ -f target/swagger-coverage-output/swagger-coverage-results.json ]; then
            sudo cp target/swagger-coverage-output/swagger-coverage-results.json allure-history/${GITHUB_RUN_NUMBER}/widgets/swagger-coverage.json
          else
            echo "⚠️ swagger-coverage JSON not found"; ls -la target || true
          fi

      - name: API coverage quality gate (>=50%)
        if: always()
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq

          # Ищем JSON с покрытием (возможные места)
          CANDIDATES=(
            "allure-history/${GITHUB_RUN_NUMBER}/widgets/swagger-coverage.json"
            "allure-history/${GITHUB_RUN_NUMBER}/widgets/coverage.json"
            "allure-report/widgets/swagger-coverage.json"
            "allure-report/widgets/coverage.json"
            "target/allure-report/widgets/swagger-coverage.json"
            "target/allure-report/widgets/coverage.json"
            "target/allure-results/swagger-coverage.json"
          )
          FILE=""
          for f in "${CANDIDATES[@]}"; do
            if [ -f "$f" ]; then FILE="$f"; break; fi
          done
          if [ -z "$FILE" ]; then
            echo "Coverage JSON not found in known locations"; exit 1
          fi
          echo "Using coverage file: $FILE"

          PCT=$(jq -r '
          if (.summary? and .summary.coverage?) then .summary.coverage
          elif (.coverage?) then .coverage
          elif (.total? and .total.coverage?) then .total.coverage
          elif (.coverage? and .coverage.total?) then .coverage.total
          elif (.conditionCounter? and (.conditionCounter.all//0) > 0) then
          ((.conditionCounter.covered / .conditionCounter.all) * 100)
          elif (.coverageOperationMap?.counter? and (.coverageOperationMap.counter.all//0) > 0) then
          (((.coverageOperationMap.counter.full + (0.5 * .coverageOperationMap.counter.party))
          / .coverageOperationMap.counter.all) * 100)
          else empty end
          ' "$FILE")

          # Если значение в долях (<=1), переводим в проценты и проверяем порог 50%
          awk -v p="$PCT" -v t="50" 'BEGIN{
            if (p<=1) p*=100;
            if (p<t) { printf "❌ API coverage %.2f%% < %d%%\n", p, t; exit 1 }
            else     { printf "✅ API coverage %.2f%% >= %d%%\n", p, t; exit 0 }
          }'

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Build & push Docker image
        run: |
          chmod +x ./push-tests.sh
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
          DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }} \
          ./push-tests.sh

      - name: Clean up services
        if: always()
        run: cd infra/docker_compose && docker compose down
